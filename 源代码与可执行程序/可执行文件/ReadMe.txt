本项目构造了一个单进程的类Unix二级文件系统，使用一个普通的大文件（mcwDisk.img ，称之为一级文件）来模拟Unix V6++的一张磁盘，磁盘中存储的信息以512字节的数据块为单位。
该文件系统的设计思路参考Unix V6++，主要实现了以下功能：
·实现对该逻辑磁盘的基本读写操作，并在该逻辑磁盘上定义了二级文件系统结构。包括存储资源管理信息块Superblock、外存索引结点DiskInode区和文件数据区。
·实现了对文件存储资源的有效管理。DiskInode结构通过“多级混合索引方式”实现了文件索引结构，Superblock通过“栈方式”管理一定数量的空闲数据块和DiskInode结点，并采用“成组链接法”管理多余的数据块。
·实现了“树形带交叉勾连”的目录结构，目录检索算法和目录的增、删、改的设计与实现。
·实现了内存的文件打开结构，提高文件操作效率。其中，利用内存Inode结构和内存索引结点表管理近期使用的文件；利用打开文件控制块File和系统打开文件表实现文件的动态管理；为进程设置进程打开文件描述符表OpenFiles，并完成对前述数据结构的勾连。
·实现了高速缓存结构。由于只考虑单用户单进程单设备，故缓存队列做了合理的简化，只保留了一个自由队列，但功能上保证了：按照LRU方式管理缓存、缓存尽可能重用、缓存延迟写回，利用高速缓存块提高了文件读取的效率。
为用户提供基本文件操作接口，通过文件操作接口调用相应的系统调用函数，进而调用文件系统的各功能函数和结构实现相应功能，包括但不限于：文件的创建、打开、读写、关闭和删除，目录的创建、结构展示和跳转、文件读写指针的移动等。

【环境】Windows10 vs2019 基于c++实现
【注意】测试该系统时，所有文件请放在本目录下，即与源代码在同一文件夹下，否则读不到。